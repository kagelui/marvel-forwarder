version: "3.7"

services:
  go-api:
    build: .
    container_name: go-marvel-forwarder-api-${CONTAINER_SUFFIX:-local}
    image: golang:1.15.0
    ports:
      - 8080:8080
    networks:
      - marvel-forwarder-network
    environment:
      CGO_ENABLED: 0
      GOARCH: amd64
      GOOS: linux
      TZ: Asia/Singapore
      DATABASE_URL: ${DATABASE_URL}

  db-api:
    container_name: db-marvel-forwarder-api-${CONTAINER_SUFFIX:-local}
    image: postgres:13-alpine
    ports:
      - 5432:5432
    networks:
      - marvel-forwarder-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
      POSTGRES_USER: marvel-forwarder-api
      POSTGRES_PASSWORD: marvel-forwarder-api

  bifrost:
    build:
      context: .
      dockerfile: bifrost.Dockerfile
    container_name: marvel-forwarder-bifrost-${CONTAINER_SUFFIX:-local}
    networks:
      - marvel-forwarder-network
    env_file:
      - .env

  migrate-api:
    container_name: migrate-marvel-forwarder-api-${CONTAINER_SUFFIX:-local}
    image: migrate/migrate:v4.10.0
    networks:
      - marvel-forwarder-network
    restart: "no"
    entrypoint: ""
    environment:
      DATABASE_URL: ${DATABASE_URL}

networks:
  marvel-forwarder-network:
    name: marvel-forwarder-network-${CONTAINER_SUFFIX:-local}
